{"ast":null,"code":"var _jsxFileName = \"/Users/dsnathan/Projects/Emurgu/DaapUniversity/my-react-app1/dapp/src/App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport Web3 from 'web3';\nimport './App.css';\nimport { ELECTION_ADDRESS, ELECTION_ABI } from './config';\n\nclass App extends Component {\n  componentWillMount() {\n    this.loadBlockChainData();\n  }\n\n  async loadBlockChainData() {\n    const web3 = new Web3(Web3.givenProvider || \"http://localhost:8545\");\n    const network = await web3.eth.net.getNetworkType();\n    console.log(\"network :::\", network); //const accounts = await web3.eth.getAccounts().then(console.log);\n\n    console.log(\"value of the account:\", web3.eth.getBalance(\"0x3AE9f696BFdEB675627C6D326f89D53000ecd40B\")); //console.log(\"value of the account:\", web3.eth.getBalance(accounts[3]))\n    //console.log(\"account 1:\", accounts[0])\n    //this.setState({account:'my val'})\n\n    const elec = new web3.eth.Contract(ELECTION_ABI, ELECTION_ADDRESS);\n    this.setState({\n      elec\n    });\n    console.log('election', elec);\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      account: \"\"\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }\n    }, \" Hello world!\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }\n    }, \"Account : \", this.state.account));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/dsnathan/Projects/Emurgu/DaapUniversity/my-react-app1/dapp/src/App.js"],"names":["React","Component","Web3","ELECTION_ADDRESS","ELECTION_ABI","App","componentWillMount","loadBlockChainData","web3","givenProvider","network","eth","net","getNetworkType","console","log","getBalance","elec","Contract","setState","constructor","props","state","account","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAO,WAAP;AACA,SAAQC,gBAAR,EAAyBC,YAAzB,QAA4C,UAA5C;;AAGA,MAAMC,GAAN,SAAkBJ,SAAlB,CAA2B;AACzBK,EAAAA,kBAAkB,GAAE;AAClB,SAAKC,kBAAL;AACD;;AAED,QAAMA,kBAAN,GAA0B;AACxB,UAAMC,IAAI,GAAG,IAAIN,IAAJ,CAAUA,IAAI,CAACO,aAAL,IAAsB,uBAAhC,CAAb;AACA,UAAMC,OAAO,GAAG,MAAMF,IAAI,CAACG,GAAL,CAASC,GAAT,CAAaC,cAAb,EAAtB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BL,OAA3B,EAHwB,CAIxB;;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCP,IAAI,CAACG,GAAL,CAASK,UAAT,CAAoB,4CAApB,CAArC,EALwB,CAMxB;AACA;AACA;;AACA,UAAMC,IAAI,GAAG,IAAIT,IAAI,CAACG,GAAL,CAASO,QAAb,CAAsBd,YAAtB,EAAoCD,gBAApC,CAAb;AACA,SAAKgB,QAAL,CAAc;AAACF,MAAAA;AAAD,KAAd;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBE,IAAxB;AACD;;AAEDG,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAACC,MAAAA,OAAO,EAAC;AAAT,KAAb;AACD;;AAEDC,EAAAA,MAAM,GAAE;AACN,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAc,KAAKF,KAAL,CAAWC,OAAzB,CAFF,CADF;AAMD;;AA/BwB;;AAkC3B,eAAelB,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport Web3 from 'web3';\nimport './App.css';\nimport {ELECTION_ADDRESS,ELECTION_ABI} from './config';\n\n\nclass App extends Component{\n  componentWillMount(){\n    this.loadBlockChainData()\n  }\n\n  async loadBlockChainData(){\n    const web3 = new Web3 (Web3.givenProvider || \"http://localhost:8545\")\n    const network = await web3.eth.net.getNetworkType()\n    console.log(\"network :::\", network)\n    //const accounts = await web3.eth.getAccounts().then(console.log);\n    console.log(\"value of the account:\", web3.eth.getBalance(\"0x3AE9f696BFdEB675627C6D326f89D53000ecd40B\"))\n    //console.log(\"value of the account:\", web3.eth.getBalance(accounts[3]))\n    //console.log(\"account 1:\", accounts[0])\n    //this.setState({account:'my val'})\n    const elec = new web3.eth.Contract(ELECTION_ABI, ELECTION_ADDRESS)\n    this.setState({elec})\n    console.log('election', elec)\n  }\n\n  constructor(props){\n    super(props)\n    this.state = {account:\"\"}\n  }\n\n  render(){\n    return(\n      <div className=\"container\">\n        <h1> Hello world!</h1>\n        <p>Account : {this.state.account}</p>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}