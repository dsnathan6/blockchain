{"ast":null,"code":"var _jsxFileName = \"/Users/dsnathan/Projects/Emurgu/DaapUniversity/my-react-app1/dapp/src/App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport Web3 from 'web3';\nimport './App.css';\nimport { ELECTION_ADDRESS, ELECTION_ABI } from './config';\n\nclass App extends Component {\n  componentWillMount() {\n    console.log(\"DSN: In the mout funcation\");\n    this.loadBlockChainData();\n  }\n\n  async loadBlockChainData() {\n    console.log(\"DSN: In the load funcation\"); // Modern dapp browsers...\n\n    if (window.ethereum) {\n      console.log(\" DSN: in the morden browser\");\n      App.web3Provider = window.ethereum;\n\n      try {\n        // Request account access\n        await window.ethereum.enable();\n      } catch (error) {\n        // User denied account access...\n        console.error(\"User denied account access\");\n      }\n    } // Legacy dapp browsers...\n    else if (window.web3) {\n        console.log(\"DSN: In the legacy brower\");\n        App.web3Provider = window.web3.currentProvider;\n      } // If no injected web3 instance is detected, fall back to Ganache\n      else {\n          console.log(\"DSN: In the else part of local hose\");\n          App.web3Provider = new Web3.providers.HttpProvider('http://localhost:7545');\n        }\n\n    const web3 = new Web3(App.web3Provider); //var accounts = []\n\n    var accounts = await web3.eth.getAccounts();\n    console.log(\"dsn account \", accounts[0], accounts.length);\n    this.setState({\n      account: accounts[0]\n    });\n    this.myelection = new web3.eth.Contract(ELECTION_ABI, ELECTION_ADDRESS);\n    console.log(\"dsn:election\", this.myelection);\n    console.log(\"dsn Account details\", accounts[0]);\n    console.log(\"in the reg fun\", this.myelection.methods.RegCandidate(\"bbb\", \"vSethilnathan D\").send({\n      value: 2,\n      from: accounts[0]\n    })); //console.log( \"in the reg fun\", this.myelection.methods.RegCandidate(\"bbb\", \"vote for bbb\").call({value:2, from : accounts[0]}))\n\n    console.log(this.myelection.methods.ListCandidate(1).call());\n  }\n\n  constructor(props) {\n    console.log(\"DSN: In the constructur\");\n    super(props);\n    var web3;\n    var myelection;\n    this.state = {\n      account: \"\"\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }, \" Hello world!\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }\n    }, \"Account : \", this.state.account));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/dsnathan/Projects/Emurgu/DaapUniversity/my-react-app1/dapp/src/App.js"],"names":["React","Component","Web3","ELECTION_ADDRESS","ELECTION_ABI","App","componentWillMount","console","log","loadBlockChainData","window","ethereum","web3Provider","enable","error","web3","currentProvider","providers","HttpProvider","accounts","eth","getAccounts","length","setState","account","myelection","Contract","methods","RegCandidate","send","value","from","ListCandidate","call","constructor","props","state","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport Web3 from 'web3';\nimport './App.css';\nimport {ELECTION_ADDRESS,ELECTION_ABI} from './config';\n\n\nclass App extends Component{\n  componentWillMount(){\n    console.log(\"DSN: In the mout funcation\")\n    this.loadBlockChainData()\n  }\n\n  async loadBlockChainData(){\n        console.log(\"DSN: In the load funcation\")\n            // Modern dapp browsers...\n        if (window.ethereum) {\n          console.log(\" DSN: in the morden browser\")\n          App.web3Provider = window.ethereum;\n          try {\n            // Request account access\n            await window.ethereum.enable();\n          } catch (error) {\n            // User denied account access...\n            console.error(\"User denied account access\")\n          }\n        }\n        // Legacy dapp browsers...\n        else if (window.web3) {\n          console.log(\"DSN: In the legacy brower\")\n          App.web3Provider = window.web3.currentProvider;\n        }\n        // If no injected web3 instance is detected, fall back to Ganache\n        else {\n          console.log(\"DSN: In the else part of local hose\")\n          App.web3Provider = new Web3.providers.HttpProvider('http://localhost:7545');\n        }\n        const web3 = new Web3(App.web3Provider);\n      \n    \n\n        //var accounts = []\n        var accounts = await web3.eth.getAccounts()\n        console.log(\"dsn account \", accounts[0], accounts.length)\n        this.setState({account:accounts[0]})\n        this.myelection = new web3.eth.Contract(ELECTION_ABI, ELECTION_ADDRESS)\n        console.log(\"dsn:election\", this.myelection)\n        console.log(\"dsn Account details\", accounts[0])\n        console.log( \"in the reg fun\", this.myelection.methods.RegCandidate(\"bbb\", \"vSethilnathan D\").send({value:2, from:accounts[0]}))\n        //console.log( \"in the reg fun\", this.myelection.methods.RegCandidate(\"bbb\", \"vote for bbb\").call({value:2, from : accounts[0]}))\n        console.log(this.myelection.methods.ListCandidate(1).call())\n\n  }\n\n\n\n  constructor(props){\n    console.log(\"DSN: In the constructur\")\n    super(props)\n    var web3\n    var myelection\n    this.state = {account:\"\"}\n  }\n\n  render(){\n    return(\n      <div className=\"container\">\n        <h1> Hello world!</h1>\n        <p>Account : {this.state.account}</p>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}