{"ast":null,"code":"var _jsxFileName = \"/Users/dsnathan/Projects/Emurgu/DaapUniversity/my-react-app1/dapp/src/App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport Web3 from 'web3';\nimport './App.css';\nimport { ELECTION_ADDRESS, ELECTION_ABI } from './config';\n\nclass App extends Component {\n  componentWillMount() {\n    this.loadBlockChainData();\n  }\n\n  async loadBlockChainData() {\n    const web3 = new Web3(Web3.givenProvider || 'http://localhost:8545');\n    const account = await web3.eth.getAccounts();\n    console.log(account);\n    const elec = await new web3.eth.Contract(ELECTION_ABI, ELECTION_ADDRESS);\n    this.state.account = account[2];\n    console.log(elec.methods.ListCandidate(1));\n    elec.methods.RegCandidate('ddd', 'from the code').send({\n      value: 1,\n      from: this.account[2]\n    });\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      account: \"\"\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }\n    }, \" Hello world!\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    }, \"Account : \", this.state.account));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/dsnathan/Projects/Emurgu/DaapUniversity/my-react-app1/dapp/src/App.js"],"names":["React","Component","Web3","ELECTION_ADDRESS","ELECTION_ABI","App","componentWillMount","loadBlockChainData","web3","givenProvider","account","eth","getAccounts","console","log","elec","Contract","state","methods","ListCandidate","RegCandidate","send","value","from","constructor","props","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAO,WAAP;AACA,SAAQC,gBAAR,EAAyBC,YAAzB,QAA4C,UAA5C;;AAGA,MAAMC,GAAN,SAAkBJ,SAAlB,CAA2B;AACzBK,EAAAA,kBAAkB,GAAE;AAClB,SAAKC,kBAAL;AACD;;AAED,QAAMA,kBAAN,GAA0B;AACxB,UAAMC,IAAI,GAAG,IAAIN,IAAJ,CAASA,IAAI,CAACO,aAAL,IAAqB,uBAA9B,CAAb;AACA,UAAMC,OAAO,GAAG,MAAMF,IAAI,CAACG,GAAL,CAASC,WAAT,EAAtB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAZ;AACA,UAAMK,IAAI,GAAG,MAAM,IAAIP,IAAI,CAACG,GAAL,CAASK,QAAb,CAAsBZ,YAAtB,EAAoCD,gBAApC,CAAnB;AACA,SAAKc,KAAL,CAAWP,OAAX,GAAqBA,OAAO,CAAC,CAAD,CAA5B;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACG,OAAL,CAAaC,aAAb,CAA2B,CAA3B,CAAZ;AACAJ,IAAAA,IAAI,CAACG,OAAL,CAAaE,YAAb,CAA0B,KAA1B,EAAiC,eAAjC,EAAkDC,IAAlD,CAAuD;AACrDC,MAAAA,KAAK,EAAC,CAD+C;AAErDC,MAAAA,IAAI,EAAE,KAAKb,OAAL,CAAa,CAAb;AAF+C,KAAvD;AAMD;;AAIDc,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AACA,SAAKR,KAAL,GAAa;AAACP,MAAAA,OAAO,EAAC;AAAT,KAAb;AACD;;AAEDgB,EAAAA,MAAM,GAAE;AACN,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAc,KAAKT,KAAL,CAAWP,OAAzB,CAFF,CADF;AAMD;;AAlCwB;;AAqC3B,eAAeL,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport Web3 from 'web3';\nimport './App.css';\nimport {ELECTION_ADDRESS,ELECTION_ABI} from './config';\n\n\nclass App extends Component{\n  componentWillMount(){\n    this.loadBlockChainData()\n  }\n\n  async loadBlockChainData(){\n    const web3 = new Web3(Web3.givenProvider|| 'http://localhost:8545')\n    const account = await web3.eth.getAccounts()\n    console.log(account)\n    const elec = await new web3.eth.Contract(ELECTION_ABI, ELECTION_ADDRESS)\n    this.state.account = account[2]\n    console.log(elec.methods.ListCandidate(1))\n    elec.methods.RegCandidate('ddd', 'from the code').send({\n      value:1,\n      from :this.account[2]\n    })\n  \n\n  }\n\n\n\n  constructor(props){\n    super(props)\n    this.state = {account:\"\"}\n  }\n\n  render(){\n    return(\n      <div className=\"container\">\n        <h1> Hello world!</h1>\n        <p>Account : {this.state.account}</p>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}