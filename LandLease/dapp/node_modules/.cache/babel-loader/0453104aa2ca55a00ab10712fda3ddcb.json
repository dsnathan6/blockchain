{"ast":null,"code":"var _jsxFileName = \"/Users/dsnathan/Projects/Emurgu/DaapUniversity/my-react-app1/dapp/src/App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport Web3 from 'web3';\nimport './App.css';\nimport { ELECTION_ADDRESS, ELECTION_ABI } from './config';\nimport ReactDOM from 'react-dom';\n\nclass App extends Component {\n  componentWillMount() {\n    console.log(\"DSN: In the mout funcation\"); //this.loadBlockChainData()\n\n    this.connectToGanache();\n  }\n\n  async loadBlockChainData() {\n    console.log(\"DSN: In the load funcation\"); // Modern dapp browsers...\n\n    if (window.ethereum) {\n      console.log(\" DSN: in the morden browser\");\n      App.web3Provider = window.ethereum;\n\n      try {\n        // Request account access\n        await window.ethereum.enable();\n      } catch (error) {\n        // User denied account access...\n        console.error(\"User denied account access\");\n      }\n    } // Legacy dapp browsers...\n    else if (window.web3) {\n        console.log(\"DSN: In the legacy brower\");\n        App.web3Provider = window.web3.currentProvider;\n      } // If no injected web3 instance is detected, fall back to Ganache\n      else {\n          console.log(\"DSN: In the else part of local hose\");\n          App.web3Provider = new Web3.providers.HttpProvider('http://localhost:7545');\n        }\n\n    const web3 = new Web3(App.web3Provider); //var accounts = []\n\n    var accounts = await web3.eth.getAccounts();\n    console.log(\"dsn account \", accounts[0], accounts.length);\n    this.setState({\n      account: accounts[0]\n    });\n    this.myelection = new web3.eth.Contract(ELECTION_ABI, ELECTION_ADDRESS);\n    console.log(\"dsn:election\", this.myelection);\n    console.log(\"dsn Account details\", accounts[0]);\n    console.log(\"in the reg fun\", this.myelection.methods.RegCandidate(\"222\", \"vSethilnathan D\").send({\n      value: 2,\n      from: accounts[0]\n    })); //console.log( \"in the reg fun\", this.myelection.methods.RegCandidate(\"bbb\", \"vote for bbb\").call({value:2, from : accounts[0]}))\n\n    console.log(this.myelection.methods.ListCandidate(2).call());\n  }\n\n  constructor(props) {\n    console.log(\"DSN: In the constructur\");\n    super(props);\n    this.web3 = \"\";\n    this.myelection = \"\";\n    this.contractOwner = \"Senthilnathan Duraivelu\";\n    this.accounts = \"\";\n    this.state = {\n      account: \"\",\n      ContractOwner: \"DDDD\"\n    };\n  }\n\n  async connectToGanache() {\n    console.log(\"In the Ganasche connection direct\");\n    const web31 = new Web3(\"http://localhost:7545\");\n    const web3 = new Web3(window.ethereum);\n    await window.ethereum.enable();\n    this.accounts = await web31.eth.getAccounts();\n    console.log(\"list of account\", this.accounts);\n    this.myelection = new web3.eth.Contract(ELECTION_ABI, ELECTION_ADDRESS);\n    console.log(\"dsn:election\", this.myelection);\n    this.setState({\n      account: this.accounts[0]\n    });\n    console.log(this.myelection.methods.ListCandidate(2).call());\n  }\n\n  async GetContractOwner() {\n    // const contractOwner= await this.myelection.methods.owner.call({from:this.accounts[0]})\n    console.log(this.myelection.methods.ListCandidate(3).call());\n    console.log(this.accounts[0]);\n    await this.myelection.methods.RegCandidate(\"Abin\", \"Abins promise\").send({\n      value: 1000000000000000000\n    });\n    console.log(\"DDDD\", this.contractOwner); //this.contractOwner = contractOwner\n    //this.contractOwner = \"Senthilnathan Duraivelu\"\n\n    ReactDOM.render(this.contractOwner, document.getElementById(\"dsnbutton\"));\n  }\n\n  GetContractOwner1() {\n    alert(\"Frm dsn\");\n  }\n\n  render() {\n    console.log(\"IIIII am called first\");\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }\n    }, \" Hello world!\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }\n    }, \"FirstAccount : \", this.state.account), /*#__PURE__*/React.createElement(\"button\", {\n      id: \"dsnbutton\",\n      onClick: () => this.GetContractOwner(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }\n    }, \"PleaseClick2\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }\n    }, \" ContractOwner:\", this.contractOwner), /*#__PURE__*/React.createElement(\"h1\", {\n      id: \"root\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/dsnathan/Projects/Emurgu/DaapUniversity/my-react-app1/dapp/src/App.js"],"names":["React","Component","Web3","ELECTION_ADDRESS","ELECTION_ABI","ReactDOM","App","componentWillMount","console","log","connectToGanache","loadBlockChainData","window","ethereum","web3Provider","enable","error","web3","currentProvider","providers","HttpProvider","accounts","eth","getAccounts","length","setState","account","myelection","Contract","methods","RegCandidate","send","value","from","ListCandidate","call","constructor","props","contractOwner","state","ContractOwner","web31","GetContractOwner","render","document","getElementById","GetContractOwner1","alert"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport Web3 from 'web3';\nimport './App.css';\nimport {ELECTION_ADDRESS,ELECTION_ABI} from './config';\nimport ReactDOM from 'react-dom';\n\n\nclass App extends Component{\n  \n\n  componentWillMount(){\n    console.log(\"DSN: In the mout funcation\")\n    //this.loadBlockChainData()\n    this.connectToGanache()\n  }\n  \n  async loadBlockChainData(){\n        console.log(\"DSN: In the load funcation\")\n            // Modern dapp browsers...\n        if (window.ethereum) {\n          console.log(\" DSN: in the morden browser\")\n          App.web3Provider = window.ethereum;\n          try {\n            // Request account access\n            await window.ethereum.enable();\n          } catch (error) {\n            // User denied account access...\n            console.error(\"User denied account access\")\n          }\n        }\n        // Legacy dapp browsers...\n        else if (window.web3) {\n          console.log(\"DSN: In the legacy brower\")\n          App.web3Provider = window.web3.currentProvider;\n        }\n        // If no injected web3 instance is detected, fall back to Ganache\n        else {\n          console.log(\"DSN: In the else part of local hose\")\n          App.web3Provider = new Web3.providers.HttpProvider('http://localhost:7545');\n        }\n        const web3 = new Web3(App.web3Provider);\n      \n    \n\n        //var accounts = []\n        var accounts = await web3.eth.getAccounts()\n        console.log(\"dsn account \", accounts[0], accounts.length)\n        this.setState({account:accounts[0]})\n        this.myelection = new web3.eth.Contract(ELECTION_ABI, ELECTION_ADDRESS)\n        console.log(\"dsn:election\", this.myelection)\n        console.log(\"dsn Account details\", accounts[0])\n        console.log( \"in the reg fun\", this.myelection.methods.RegCandidate(\"222\", \"vSethilnathan D\").send({value:2, from:accounts[0]}))\n        //console.log( \"in the reg fun\", this.myelection.methods.RegCandidate(\"bbb\", \"vote for bbb\").call({value:2, from : accounts[0]}))\n        console.log(this.myelection.methods.ListCandidate(2).call())\n\n  }\n\n   \n\n  constructor(props){\n    console.log(\"DSN: In the constructur\")\n    super(props)\n    this.web3 = \"\"\n    this.myelection = \"\"\n    this.contractOwner = \"Senthilnathan Duraivelu\"\n    this.accounts=\"\"\n    this.state = {account:\"\",\n    ContractOwner:\"DDDD\"}\n  }\n\n  async connectToGanache(){\n    console.log(\"In the Ganasche connection direct\")\n    const web31 = new Web3(\"http://localhost:7545\");\n    const web3 = new Web3(window.ethereum)\n    await window.ethereum.enable();\n    this.accounts = await web31.eth.getAccounts()\n    console.log(\"list of account\", this.accounts)\n    this.myelection = new web3.eth.Contract(ELECTION_ABI, ELECTION_ADDRESS)\n    console.log(\"dsn:election\", this.myelection)\n    this.setState({account:this.accounts[0]})\n    console.log(this.myelection.methods.ListCandidate(2).call())\n  }\n\n  async GetContractOwner() {\n   // const contractOwner= await this.myelection.methods.owner.call({from:this.accounts[0]})\n    console.log(this.myelection.methods.ListCandidate(3).call())\n    console.log(this.accounts[0])\n    await this.myelection.methods.RegCandidate(\"Abin\", \"Abins promise\").send({value:1000000000000000000})\n    console.log(\"DDDD\", this.contractOwner)\n    //this.contractOwner = contractOwner\n    //this.contractOwner = \"Senthilnathan Duraivelu\"\n    ReactDOM.render(this.contractOwner, document.getElementById(\"dsnbutton\"))\n  \n  }\n\n  GetContractOwner1() {\n    alert(\"Frm dsn\")\n  }\n\n  render(){\n    console.log(\"IIIII am called first\")\n    return(\n      <div className=\"container\">\n        <h1> Hello world!</h1>\n        <p>FirstAccount : {this.state.account}</p>\n        <button id=\"dsnbutton\" onClick={()=>this.GetContractOwner()}>PleaseClick2</button>\n        <p> ContractOwner:{this.contractOwner}</p>\n        <h1 id=\"root\"></h1>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}